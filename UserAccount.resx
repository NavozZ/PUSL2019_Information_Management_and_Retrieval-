<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAABEJJREFUWEftWFuIlVUUPiEmopVmSa8V9qDPiQV2g3BA5+x9Rv8Uih4kdR6CQYWk
        Htp7H/EyeYGIKF9U1AcVIZgHFTQEcR4yKRDfBHUirSHJ/z8n0m6evrVmzfG/7HOb/qOGfvDBP3t9e611
        9mXtvafwEN1ErVB7pKLdq5F264j0TW1izuB6j3m8qstvVZTdAG1/2GeeE1P+CPXG5xHkW7CWoLJnySay
        OqrKLoftelwbKfdPpO3ntcA8KrJ8UAk2PQ3HP8SDpThSWWKeEnkhKpoiJePRjVG5vSLNB3C6MxMkTWV3
        kLYWHJ6E7yteTYxRySxg53mgnYAVbS+RNtRmvt+eonKfsPM8gOn6wxskRiyBW6zF9PrsGSp3gJ3nATi8
        nAmQoYxgyb3otyeJHzTIzvMAHLZeg9ptJ+29WYPYoXA6kg4S40ikN88SOS2J3qa7WNs9Is0PXAdR8zLB
        lPvGV4ClQKfqoP0bbZ/lXgfHwSdJ0bwSFe1aIn03O0l+KQ4+Bs0yJLUBXHOjd+OzYnpAQL8YU7MPxBFn
        zzWkcgtJzyVGuWNeTYqY7jPw+3Gt59MpHKxT0KKHk2vj66cRUS7OyyVCpW1tcp+E7AwVVX7P4yxDJLiL
        9doe99lbEf1v31BmBgftBAhofA7TRDmxpEegCz57O6z2ludx0E5AgX3O0pxIglg6v2MAhsYGwa6ieyMH
        7QTdSBDa0VC79396c9s0DvJfkHeCsB+husjOBVwjta3Adgt1cr80t4ecE9zuK+h4Nhysa5QN0z+gKfJK
        kEbOlxzdevjoS2o3ibk18kgQtlEaFbrhwD5QLZk3+Dqm3Ac0tWk9E88B0kXKvEwbKNLmBU4ojTwSpA0h
        toG0rV2i72nykQGGf72vQ4Zydcd34sVHpYR2K91c2jmRmrFadK9zUnEg8FKfOEO5uiOJQ0mbHaL22upd
        k7EZvkra7hC278ETmImbfrv9MeorzyFfCdDxg04t3yLgCOkjXV6ZbLeGHQF87fI9G3CciqRASdCajduR
        3O2qMq+JJAv8si/jHRqRFjRNJ/RX77TbVeKGgWCDiT7afiemOjAbH8U14EUx+UEPdtSn1k9OZY+SPlRu
        Eab6T2oLS/ZtdiJAwh/G+yDBk2Kqgy61cQ36nBNTY6Daz4W45asOU/wO6aNi+V2M5F9IYIAdCDB9Xyf0
        2ETxEsKPLe2GExqcML8F5hmRNAY9muDwC9+aJCdkCxdvmSlyWhovwdYvf9IO74/3GSevOZ7W8mr8nUiu
        TlyAaaOJq+b4Ndj6REWbPn6TcBkyfWFgnhSzF6OBmY5EvDu0XVZL5RXirjtAkN3poO0SM/RzLdgxVVx1
        Bzi6ZmPEz/Ay0W4rNkP2+SrkSoCnKb534vtEteQCcXN34SkplNypCV1euwUqI/XkcLPxnhj3Ehgx+jfy
        +AgOS/P9AzpOw5LpwS7vbXit+n+hUPgXaJHX8Gv0O8oAAAAASUVORK5CYII=
</value>
  </data>
</root>