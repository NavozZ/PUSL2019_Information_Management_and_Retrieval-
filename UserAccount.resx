<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAQdSURBVFhH7VhNiBxVEB4RFfHfRPGqogc9KyrEqCAumO2q
        WR0VFA+Sv4MQVFDiwVfVIZrVRBARzUVD9KAiCDkYQUUQczAGBfEmqBETsxhM1xuJUaMj9aZ70l39drad
        9LoofvDB0PVNVXX3e/WqutP5H4uIQWdwikdeKcgPK/W3XrO6Aoen3Ll9TO/yQI955PXZjLvMalpDhpsu
        98ifeuRBhUB71Wb1faC7PdDhslaA/xCkFwY9d7rVnxR8b/NFgvRdLbkT3O9XueWFXhKXaDIRXX5TvKMa
        4SThkZ+tBbEE2qbaQe/NUz3QtzW7oXTddTbOxGgS0CN9rdoM3bV1W4TAT9s4E0OAf60FMBSkY0GbuMTa
        ogR+zcaZGB75m1qAGvMn2OVr6rY6BWnWxpkYjdYg8lbVLs0aXOWWh50aCZRzv+CTywq9AE+P3cVIr1Qj
        tIBQB4H21oIBfxIrwHmBNnWQjnug51uvgwXCSZK4GyWhh5T6e9xJ8mMye45P3J3hJAFad2R606VW89+G
        3rFH3jk84mjfvAReofpQYoB31+wRCtDHHvmJwdRzZ9i4jaCLXoAO1tacoSB9kTcRYG0NudPGbgQP6eqI
        sxoFaXvQI71rbU0oSH8eAXe+jb8gPJKzzmIUYFK9IH1pbU3Zn06vtvEXhAa2jmKcJEEBOuqRdg0fAq3R
        vtHGXxCLkaAAz2XID/5w6zNn2Xh/G20nKEhvaV0sxwg1Eslro+GBXi3bFkTLCW6NFXRBfn2kAcrsDYxF
        Wwnqk4slp11POPqq2s1WNy/aSFDXnD4V7XAEaUO/624J7Rjwo/pqrT4QeIfqBNwNuoEE3ZU2t4A2EtQN
        kds2WFtTCtJHNrcAAXrEiqPMW3c78Wkp0d2qnUuTE2kc+wnfbPPreOA7rDDKvHUXoDeqNtql1wdrt58m
        yG/X/pdTkD8X5PcE+BdrG9rpe5lJr7D5dfT4aTKLaLMaEsT0gep1coWv0HbFxgZIVxcaTULXbNmux2Af
        3E2FpgZBfqnmNEJd0Po6BfnAieu0puqLZk3wz8p2hQd+3Pj+ymoq0IG9yXzhgd5RfQZ8mwD9pteyLt1b
        8YW00ST4ftkeNEDrqr5pn9XU4BN3VfT1GAqm96lekvR+Qf5dd27ZjwB/UNEDHS2XkDBsIe+p+qRjP/fc
        JWU/UejQJEAvxtakOlFbdvtTFxR6Qb5ePxaN/o+83v5vmCTPDV9rutYmNyLwbt1oo2TG4afelvM8upkw
        k4Qy5GaynrvQ6sqY67mz59uhTdnvpvdYv63CI79sgzalIB0a9LadaX22in7XXawzSFgmyFui4+soIT6g
        o6l+LND62O9yz/r7RxApKZrchxM1r4uF4YSXJwd0PHpiLCXyz8jFE9xj7UsOPU6zrpsK33Lma6v+bfgL
        aJHX8A7SbQgAAAAASUVORK5CYII=
</value>
  </data>
</root>